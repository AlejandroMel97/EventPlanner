Ok so let me start with this:
Sorry to whoever has to deal with this, I done messed up

So in order to save to file in chrome, what we did was
use the localStorage command.  It takes in as parameters
localStorage(key, variable)
both of which are strings
The problem with this is that instead of making a CSV file, we
basically had to make a CSV string so here's an example of how
its formatted for all of the cases

For a list of events

Key: masterEvent
variable: birthday@Mon Sept 31 05:00:00 GMT-0500 (Central Daylight Time)@300

For a list of users

key: masterUser
varialbe: nye@bill

ok so now I'll run ya through how to save each. Lets
start with how to save a list of events from
a page

Functions Needed:
populateEvent()
evetArray(list)
readEventData(name)
writeData(array, offset, name)

ok so from a page, say you want to add an event to the master user list.
What you'll have to do first is call populateEvent. We do this because
on the load of a new HTML page or a refresh, that information is gone.
So in order to combat this, we have to write to file and read to move on
to the next page. BASICALLY, use that then you'll have an list named
masterEvent that you can then perform add, search, returnAt, etc on.
So after we do this and you perform whatever operations you want on this list,
what you'll do next is eventArray(masterEvent).  This will return an array
so you'll want to use it like this.
var arr = eventArray(masterUser).
arr now is an array that has each of the values of the event, like this
[birthday,Mon Sept 31 05:00:00 GMT-0500 (Central Daylight Time), 300]
so you pass that into writeArray(arr, offset, name). Here are the values of each

arr is arr as shown above
offset is 3, as in there are three objects to store in the string
name will be "masterEvent"

ok so after that, if you inspect elements on chrome and click on the
Application tab, you'll see the key on the left of masterUser
and your giant string on the right. readEventData is used by populateEvent
and a description is provided in the file itself, but basically it does the
opposite and parses that big string and stores it an array

Next we'll go over how to store a list of users of an event

Functions needed:
readData(name)
userArray(list)
populateUser(name)
writeData(array, offset, name)

Ok so a lot of this is the same as above, but I'll run you through what's
different. So readData is teh same as above, its used in populate user and just
reads a filename thats given to it and returns an array so don't need to
worry about that one too much. So lets again start off with populateUser(name)
If we want to populate the masterUser list, do populateUser("masterUser").
Similarly, if we want to populate that birthday list from the last example,
do populateUser("birthday"). Bam you now have a list. Perform your functions on
the list as you please. Now if you want to store that, you'll again do
userArray(name) where name is your event or masterUser.  You'll do it as so

var arr = userArray("birthday");

arr will look like this for a list of users

[nye@bill star@patrick...]

again writeData(arr, offset, name). Here are their values

arr is arr
offset is 2, as there are two objects to store
name is birthday

You can then find this data saved as the last one.  All good.
If you need any help, my name is Zach McGrath and just
email me at z897m200@ku.edu or just find me. Good luck fam 
