{
    "project": {},
    "files": {
        "add_event.js": {
            "name": "add_event.js",
            "modules": {
                "addEvent": 1,
                "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options.": 1
            },
            "classes": {
                "addEvent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "adminMode.js": {
            "name": "adminMode.js",
            "modules": {
                "adminMode": 1
            },
            "classes": {
                "adminMode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "attendee.js": {
            "name": "attendee.js",
            "modules": {
                "attendee": 1
            },
            "classes": {
                "attendnee": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "dataIO.js": {
            "name": "dataIO.js",
            "modules": {
                "dataIO": 1
            },
            "classes": {
                "dataIO": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "global.js": {
            "name": "global.js",
            "modules": {
                "global": 1
            },
            "classes": {
                "global": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "linkedlist.js": {
            "name": "linkedlist.js",
            "modules": {
                "linkedlist": 1
            },
            "classes": {
                "linkedlist": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "meeting.js": {
            "name": "meeting.js",
            "modules": {
                "meetin": 1,
                "meeting": 1
            },
            "classes": {
                "meeting": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "user.js": {
            "name": "user.js",
            "modules": {
                "user": 1
            },
            "classes": {
                "user": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "user_availability.js": {
            "name": "user_availability.js",
            "modules": {
                "user_availability": 1
            },
            "classes": {
                "user_availability": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "addEvent": {
            "name": "addEvent",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "add_event.js",
            "line": 1
        },
        "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options.": {
            "name": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options.",
            "submodules": {},
            "elements": {},
            "classes": {
                "addEvent": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "add_event.js",
            "line": 1
        },
        "adminMode": {
            "name": "adminMode",
            "submodules": {},
            "elements": {},
            "classes": {
                "adminMode": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "adminMode.js",
            "line": 1
        },
        "attendee": {
            "name": "attendee",
            "submodules": {},
            "elements": {},
            "classes": {
                "attendnee": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "attendee.js",
            "line": 1
        },
        "dataIO": {
            "name": "dataIO",
            "submodules": {},
            "elements": {},
            "classes": {
                "dataIO": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "dataIO.js",
            "line": 1
        },
        "global": {
            "name": "global",
            "submodules": {},
            "elements": {},
            "classes": {
                "global": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "global.js",
            "line": 1
        },
        "linkedlist": {
            "name": "linkedlist",
            "submodules": {},
            "elements": {},
            "classes": {
                "linkedlist": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "linkedlist.js",
            "line": 1
        },
        "meetin": {
            "name": "meetin",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "meeting.js",
            "line": 1
        },
        "meeting": {
            "name": "meeting",
            "submodules": {},
            "elements": {},
            "classes": {
                "meeting": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "meeting.js",
            "line": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "title",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "length",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "list\n\nIMPORTANT:",
                    "description": "ALL HOURS ARE STORED IN 24 HOUR FORMAT FROM 0-23",
                    "type": "Linkedlist"
                }
            ]
        },
        "user": {
            "name": "user",
            "submodules": {},
            "elements": {},
            "classes": {
                "user": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "user.js",
            "line": 1
        },
        "user_availability": {
            "name": "user_availability",
            "submodules": {},
            "elements": {},
            "classes": {
                "user_availability": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "user_availability.js",
            "line": 1
        }
    },
    "classes": {
        "addEvent": {
            "name": "addEvent",
            "shortname": "addEvent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options.",
            "namespace": "",
            "file": "add_event.js",
            "line": 1
        },
        "adminMode": {
            "name": "adminMode",
            "shortname": "adminMode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "adminMode",
            "namespace": "",
            "file": "adminMode.js",
            "line": 1
        },
        "attendnee": {
            "name": "attendnee",
            "shortname": "attendnee",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "attendee",
            "namespace": "",
            "file": "attendee.js",
            "line": 1
        },
        "dataIO": {
            "name": "dataIO",
            "shortname": "dataIO",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dataIO",
            "namespace": "",
            "file": "dataIO.js",
            "line": 1
        },
        "global": {
            "name": "global",
            "shortname": "global",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "global",
            "namespace": "",
            "file": "global.js",
            "line": 1
        },
        "linkedlist": {
            "name": "linkedlist",
            "shortname": "linkedlist",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "linkedlist",
            "namespace": "",
            "file": "linkedlist.js",
            "line": 1
        },
        "meeting": {
            "name": "meeting",
            "shortname": "meeting",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "meeting",
            "namespace": "",
            "file": "meeting.js",
            "line": 1
        },
        "user": {
            "name": "user",
            "shortname": "user",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "user",
            "namespace": "",
            "file": "user.js",
            "line": 1
        },
        "user_availability": {
            "name": "user_availability",
            "shortname": "user_availability",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "user_availability",
            "namespace": "",
            "file": "user_availability.js",
            "line": 1
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "add_event.js",
            "line": 17,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 20,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 26,
            "description": "Sets the name for the user",
            "itemtype": "method",
            "name": "setName()",
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 43,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 47,
            "itemtype": "method",
            "name": "timeSwitcher",
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 53,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 79,
            "description": "<<<<<<< HEAD\n * addAMPM select box\n *@method addAMPM\n=======\n *addAMPM select box\n *@method addAMPM()\n>>>>>>> 010f31a54292dc8059f7561942a9701ef5c42d7d",
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 94,
            "description": "<<<<<<< HEAD\n *  Remove AMPM select box\n=======\n *Remove AMPM select box\n>>>>>>> 010f31a54292dc8059f7561942a9701ef5c42d7d\n *@method removeAMPM()",
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 109,
            "description": "populates the select box with the correct number of hours",
            "itemtype": "method",
            "name": "populateHours()\n<<<<<<< HEAD\n\n=======\n\n>>>>>>> 010f31a54292dc8059f7561942a9701ef5c42d7d",
            "params": [
                {
                    "name": "mode",
                    "description": "- sets the mode for the select box\n     23 for 24-Hour mode and 12 for 12-Hour mode.",
                    "type": "Number"
                },
                {
                    "name": "i",
                    "description": "- sets the number for the select box to\n     start counting at. Should be 1 for 12-Hour mode and\n     5 for 24-Hour mode.",
                    "type": "Number"
                },
                {
                    "name": "id",
                    "description": "- This is the element id of the select\n     box you would like to populate.",
                    "type": "String"
                },
                {
                    "name": "ampmID",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 130,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 139,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 163,
            "description": "<<<<<<< HEAD\n *  unpopulates this given select box\n=======\n * unpopulates this given select box\n>>>>>>> 010f31a54292dc8059f7561942a9701ef5c42d7d\n * @method unpopulateHour()\n * @param {string} id - This is the element id of the select\n *      box you would like to populate.",
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 184,
            "description": "If so, the page is redirected. Otherwise, it is refreshed.",
            "itemtype": "method",
            "name": "submitVals()",
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 193,
            "description": "0123456789",
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 215,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 217,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 219,
            "description": "FOR STORING THE TIME IN 24 HOUR MODE",
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 223,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 241,
            "description": "console.log(\"Event name: \"+ eventTitle);\nconsole.log(\"Date: \" + month + \"/\" + day + \"/\" + year);\nconsole.log(\"Start time: \"+strthour + \":\"+strtmin);",
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 249,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 256,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 259,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 264,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 270,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 276,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 279,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 281,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 299,
            "description": "Checks to see if the date can be used or not",
            "itemtype": "method",
            "name": "isInvalidDate()",
            "params": [
                {
                    "name": "month",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "day",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "year",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "inputDate",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "currentDate",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "length",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "strthour",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "endhour",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 313,
            "description": "console.log(endhour);",
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 317,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 322,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 328,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 334,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 340,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 345,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 347,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 350,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 353,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 359,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 365,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 373,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 380,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 386,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 390,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 393,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 401,
            "description": "Redirects the page according to if date is invalid\n    If the date is bad, it will refresh the page,\n    otherwise it will redirect to events.html",
            "itemtype": "method",
            "name": "redirect()",
            "params": [
                {
                    "name": "badDate",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 412,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "add_event.js",
            "line": 417,
            "class": "addEvent",
            "module": "add_event\nToggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        {
            "file": "adminMode.js",
            "line": 7,
            "description": "Populates the events to see which events can be selected",
            "class": "adminMode",
            "module": "adminMode"
        },
        {
            "file": "adminMode.js",
            "line": 20,
            "description": "Get the node at index i from masterEvent",
            "class": "adminMode",
            "module": "adminMode"
        },
        {
            "file": "adminMode.js",
            "line": 39,
            "description": "Removes the events when page is reloaded",
            "class": "adminMode",
            "module": "adminMode"
        },
        {
            "file": "adminMode.js",
            "line": 52,
            "description": "Adds the attendee to the Attendee Table",
            "class": "adminMode",
            "module": "adminMode"
        },
        {
            "file": "adminMode.js",
            "line": 68,
            "description": "Populates the Attendee Table to see who is attending",
            "class": "adminMode",
            "module": "adminMode"
        },
        {
            "file": "adminMode.js",
            "line": 92,
            "description": "Removes the Attendee Table when page is reloaded",
            "class": "adminMode",
            "module": "adminMode"
        },
        {
            "file": "dataIO.js",
            "line": 13,
            "func": "writeData(array,offset,name)",
            "params": [
                {
                    "name": "array",
                    "description": ""
                },
                {
                    "name": "num",
                    "description": ""
                },
                {
                    "name": "name",
                    "description": "array: values to store are saved in with an offset\n   offset: # of values saved per item\n   name: name of value"
                }
            ],
            "example": [
                ":\n  Say I want to store the attendees of an event in\n   an event.  If the event name is Birthday, the attendee's look like this:\n   last name, first name\n   Smith, John\n   Foo, Bill\n   Jimmy, Gill\n\n The array should look like this:\n arr =[Smith, John, Foo, Bill, Jimmy, Gill]\n\n num will be equal to 2 here for the number of items per attendee\n\n  This function will save it as so\n  Smith@John Foo@Bill Jimmy@Gill"
            ],
            "return": {
                "description": "null"
            },
            "class": "dataIO",
            "module": "dataIO"
        },
        {
            "file": "dataIO.js",
            "line": 76,
            "func": "readData(name)",
            "params": [
                {
                    "name": "string",
                    "description": ""
                }
            ],
            "example": [
                "\n //TAKES IN A NAME OF A DATA STRUCTURE TO READ IN\n //TAKES FROM localStorage\n //IF FILE NON EXISTENT, PRINT TO CONOSLE AND RETURN\n //RETURNS AN ARRAY STUCTURED AS SO\n //array(data1, data1a, data1b, data2a, data2b)\n //BASED ON READ FILE FORMAT AS\n data1@data1a@data1b... data2@data2a...\n //SEE HOW THE writeData FUNCTION ABOVE WRITES FOR A MORE\n // DETAILED DESCRIPTION"
            ],
            "return": {
                "description": "array"
            },
            "class": "dataIO",
            "module": "dataIO"
        },
        {
            "file": "dataIO.js",
            "line": 139,
            "func": "readEventData(name)",
            "params": [
                {
                    "name": "string",
                    "description": "Takes in a name of a file that stores event data\n Different than readData because it parses information different"
                }
            ],
            "example": [
                "\n trying to read masterEvent\n call readEventData (masterEvent)"
            ],
            "return": {
                "description": "array formated as such\n [title, date, length,...]"
            },
            "class": "dataIO",
            "module": "dataIO"
        },
        {
            "file": "dataIO.js",
            "line": 194,
            "func": "eventArray(list)",
            "params": [
                {
                    "name": "list",
                    "description": ""
                }
            ],
            "example": [
                "\ntakes in a list of events and changes it to an array\nSince the list is passed by value, removing the first value wont destroy\nthe master list"
            ],
            "return": {
                "description": ": (array)"
            },
            "class": "dataIO",
            "module": "dataIO"
        },
        {
            "file": "dataIO.js",
            "line": 222,
            "func": "userArray()\ntakes in a list of users and changes it to array",
            "params": [
                {
                    "name": "list",
                    "description": ""
                }
            ],
            "example": [
                " userArray(masterUser)"
            ],
            "return": {
                "description": "array"
            },
            "class": "dataIO",
            "module": "dataIO"
        },
        {
            "file": "dataIO.js",
            "line": 244,
            "func": "populateEvent()",
            "params": [
                {
                    "name": "none",
                    "description": ""
                }
            ],
            "return": {
                "description": "null"
            },
            "class": "dataIO",
            "module": "dataIO"
        },
        {
            "file": "dataIO.js",
            "line": 274,
            "itemtype": "method",
            "name": "populateUser(name)",
            "params": [
                {
                    "name": "string",
                    "description": ""
                }
            ],
            "return": {
                "description": "list"
            },
            "class": "dataIO",
            "module": "dataIO"
        },
        {
            "file": "global.js",
            "line": 20,
            "global": "lists for keeping track of\n        all users and all events",
            "class": "global",
            "module": "global"
        },
        {
            "file": "meeting.js",
            "line": 36,
            "description": "Takes in a first name and a last name\ncreates a new attendee, and adds it to the list.",
            "itemtype": "method",
            "name": "add()",
            "params": [
                {
                    "name": "lastName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "firstName",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "meeting",
            "module": "meeting"
        },
        {
            "file": "meeting.js",
            "line": 52,
            "description": "Allows for comparison of events by date.",
            "itemtype": "method",
            "name": "valueOf()",
            "class": "meeting",
            "module": "meeting"
        },
        {
            "file": "user_availability.js",
            "line": 9,
            "description": "Adds a row to the table on user_availabilty.html. This will\nbe used to add the given events to the table.",
            "class": "user_availability",
            "module": "user_availability"
        },
        {
            "file": "user_availability.js",
            "line": 16,
            "description": "Sets the username for the user",
            "class": "user_availability",
            "module": "user_availability"
        },
        {
            "file": "user_availability.js",
            "line": 35,
            "description": "Adds the event to the Event Table",
            "params": [
                {
                    "name": "title",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "date",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "time",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "user_availability",
            "module": "user_availability"
        },
        {
            "file": "user_availability.js",
            "line": 64,
            "description": "Loads the events from the list and shows which ones are available to the user",
            "class": "user_availability",
            "module": "user_availability"
        },
        {
            "file": "user_availability.js",
            "line": 96,
            "description": "Check to see what events the user is going to",
            "class": "user_availability",
            "module": "user_availability"
        },
        {
            "file": "user_availability.js",
            "line": 120,
            "description": "Adds user to the event they have chosen for their availability",
            "class": "user_availability",
            "module": "user_availability"
        },
        {
            "file": "user_availability.js",
            "line": 134,
            "description": "Here we keep track of which events had a check by there name\nNext thing to do is write to file (filename being that event)\nthat the person who is logged in is attending",
            "class": "user_availability",
            "module": "user_availability"
        },
        {
            "file": "user_availability.js",
            "line": 145,
            "description": "Populate the list of that event",
            "class": "user_availability",
            "module": "user_availability"
        },
        {
            "file": "user_availability.js",
            "line": 156,
            "description": "create a new attendee with the user logged in",
            "class": "user_availability",
            "module": "user_availability"
        },
        {
            "file": "user_availability.js",
            "line": 160,
            "description": "add the person to the list",
            "class": "user_availability",
            "module": "user_availability"
        },
        {
            "file": "user_availability.js",
            "line": 164,
            "description": "write the list to file",
            "class": "user_availability",
            "module": "user_availability"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: func",
            "line": " dataIO.js:13"
        },
        {
            "message": "unknown tag: func",
            "line": " dataIO.js:76"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " dataIO.js:76"
        },
        {
            "message": "unknown tag: func",
            "line": " dataIO.js:139"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " dataIO.js:139"
        },
        {
            "message": "unknown tag: func",
            "line": " dataIO.js:194"
        },
        {
            "message": "unknown tag: func",
            "line": " dataIO.js:222"
        },
        {
            "message": "unknown tag: func",
            "line": " dataIO.js:244"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " dataIO.js:274"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:17"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:20"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:43"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:53"
        },
        {
            "message": "Missing item type\n<<<<<<< HEAD\n * addAMPM select box\n *@method addAMPM\n=======\n *addAMPM select box\n *@method addAMPM()\n>>>>>>> 010f31a54292dc8059f7561942a9701ef5c42d7d",
            "line": " add_event.js:79"
        },
        {
            "message": "Missing item type\n<<<<<<< HEAD\n *  Remove AMPM select box\n=======\n *Remove AMPM select box\n>>>>>>> 010f31a54292dc8059f7561942a9701ef5c42d7d\n *@method removeAMPM()",
            "line": " add_event.js:94"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:130"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:139"
        },
        {
            "message": "Missing item type\n<<<<<<< HEAD\n *  unpopulates this given select box\n=======\n * unpopulates this given select box\n>>>>>>> 010f31a54292dc8059f7561942a9701ef5c42d7d\n * @method unpopulateHour()\n * @param {string} id - This is the element id of the select\n *      box you would like to populate.",
            "line": " add_event.js:163"
        },
        {
            "message": "Missing item type\n0123456789",
            "line": " add_event.js:193"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:215"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:217"
        },
        {
            "message": "Missing item type\nFOR STORING THE TIME IN 24 HOUR MODE",
            "line": " add_event.js:219"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:223"
        },
        {
            "message": "Missing item type\nconsole.log(\"Event name: \"+ eventTitle);\nconsole.log(\"Date: \" + month + \"/\" + day + \"/\" + year);\nconsole.log(\"Start time: \"+strthour + \":\"+strtmin);",
            "line": " add_event.js:241"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:249"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:256"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:259"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:264"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:270"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:276"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:279"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:281"
        },
        {
            "message": "Missing item type\nconsole.log(endhour);",
            "line": " add_event.js:313"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:317"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:322"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:328"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:334"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:340"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:345"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:347"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:350"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:353"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:359"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:365"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:373"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:380"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:386"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:390"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:393"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:412"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:417"
        },
        {
            "message": "Missing item type\nPopulates the events to see which events can be selected",
            "line": " adminMode.js:7"
        },
        {
            "message": "Missing item type\nGet the node at index i from masterEvent",
            "line": " adminMode.js:20"
        },
        {
            "message": "Missing item type\nRemoves the events when page is reloaded",
            "line": " adminMode.js:39"
        },
        {
            "message": "Missing item type\nAdds the attendee to the Attendee Table",
            "line": " adminMode.js:52"
        },
        {
            "message": "Missing item type\nPopulates the Attendee Table to see who is attending",
            "line": " adminMode.js:68"
        },
        {
            "message": "Missing item type\nRemoves the Attendee Table when page is reloaded",
            "line": " adminMode.js:92"
        },
        {
            "message": "Missing item type",
            "line": " dataIO.js:13"
        },
        {
            "message": "Missing item type",
            "line": " dataIO.js:76"
        },
        {
            "message": "Missing item type",
            "line": " dataIO.js:139"
        },
        {
            "message": "Missing item type",
            "line": " dataIO.js:194"
        },
        {
            "message": "Missing item type",
            "line": " dataIO.js:222"
        },
        {
            "message": "Missing item type",
            "line": " dataIO.js:244"
        },
        {
            "message": "Missing item type",
            "line": " global.js:20"
        },
        {
            "message": "Missing item type\nAdds a row to the table on user_availabilty.html. This will\nbe used to add the given events to the table.",
            "line": " user_availability.js:9"
        },
        {
            "message": "Missing item type\nSets the username for the user",
            "line": " user_availability.js:16"
        },
        {
            "message": "Missing item type\nAdds the event to the Event Table",
            "line": " user_availability.js:35"
        },
        {
            "message": "Missing item type\nLoads the events from the list and shows which ones are available to the user",
            "line": " user_availability.js:64"
        },
        {
            "message": "Missing item type\nCheck to see what events the user is going to",
            "line": " user_availability.js:96"
        },
        {
            "message": "Missing item type\nAdds user to the event they have chosen for their availability",
            "line": " user_availability.js:120"
        },
        {
            "message": "Missing item type\nHere we keep track of which events had a check by there name\nNext thing to do is write to file (filename being that event)\nthat the person who is logged in is attending",
            "line": " user_availability.js:134"
        },
        {
            "message": "Missing item type\nPopulate the list of that event",
            "line": " user_availability.js:145"
        },
        {
            "message": "Missing item type\ncreate a new attendee with the user logged in",
            "line": " user_availability.js:156"
        },
        {
            "message": "Missing item type\nadd the person to the list",
            "line": " user_availability.js:160"
        },
        {
            "message": "Missing item type\nwrite the list to file",
            "line": " user_availability.js:164"
        }
    ]
}