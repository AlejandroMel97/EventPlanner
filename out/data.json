{
    "project": {},
    "files": {
        "add_event.js": {
            "name": "add_event.js",
            "modules": {
                "add_event": 1
            },
            "classes": {
                "addEvent": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "adminMode.js": {
            "name": "adminMode.js",
            "modules": {
                "adminMode": 1
            },
            "classes": {
                "adminMode": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "attendee.js": {
            "name": "attendee.js",
            "modules": {
                "attendee": 1
            },
            "classes": {
                "attendnee": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "dataIO.js": {
            "name": "dataIO.js",
            "modules": {
                "dataIO": 1
            },
            "classes": {
                "dataIO": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "global.js": {
            "name": "global.js",
            "modules": {
                "global": 1
            },
            "classes": {
                "global": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "linkedlist.js": {
            "name": "linkedlist.js",
            "modules": {
                "linkedlist": 1
            },
            "classes": {
                "linkedlist": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "meeting.js": {
            "name": "meeting.js",
            "modules": {
                "meetin": 1,
                "meeting": 1
            },
            "classes": {
                "meeting": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "user.js": {
            "name": "user.js",
            "modules": {
                "user": 1
            },
            "classes": {
                "user": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "user_availability.js": {
            "name": "user_availability.js",
            "modules": {
                "user_availability": 1
            },
            "classes": {
                "user_availability": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "add_event": {
            "name": "add_event",
            "submodules": {},
            "elements": {},
            "classes": {
                "addEvent": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "add_event.js",
            "line": 1,
            "description": "Toggle 24 hour mode and 12 hour mode\nChecks if the 24-Hour checkbox is checked then populates the\nselect box with the correct number of options."
        },
        "adminMode": {
            "name": "adminMode",
            "submodules": {},
            "elements": {},
            "classes": {
                "adminMode": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "adminMode.js",
            "line": 1
        },
        "attendee": {
            "name": "attendee",
            "submodules": {},
            "elements": {},
            "classes": {
                "attendnee": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "attendee.js",
            "line": 1
        },
        "dataIO": {
            "name": "dataIO",
            "submodules": {},
            "elements": {},
            "classes": {
                "dataIO": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "dataIO.js",
            "line": 1
        },
        "global": {
            "name": "global",
            "submodules": {},
            "elements": {},
            "classes": {
                "global": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "global.js",
            "line": 1
        },
        "linkedlist": {
            "name": "linkedlist",
            "submodules": {},
            "elements": {},
            "classes": {
                "linkedlist": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "linkedlist.js",
            "line": 1
        },
        "meetin": {
            "name": "meetin",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "meeting.js",
            "line": 1
        },
        "meeting": {
            "name": "meeting",
            "submodules": {},
            "elements": {},
            "classes": {
                "meeting": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "meeting.js",
            "line": 1,
            "is_constructor": 1,
            "params": [
                {
                    "name": "title",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "length",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "list\n\nIMPORTANT:",
                    "description": "ALL HOURS ARE STORED IN 24 HOUR FORMAT FROM 0-23",
                    "type": "Linkedlist"
                }
            ]
        },
        "user": {
            "name": "user",
            "submodules": {},
            "elements": {},
            "classes": {
                "user": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "user.js",
            "line": 1
        },
        "user_availability": {
            "name": "user_availability",
            "submodules": {},
            "elements": {},
            "classes": {
                "user_availability": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "user_availability.js",
            "line": 1
        }
    },
    "classes": {
        "addEvent": {
            "name": "addEvent",
            "shortname": "addEvent",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "add_event",
            "file": "add_event.js",
            "line": 1
        },
        "adminMode": {
            "name": "adminMode",
            "shortname": "adminMode",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "adminMode",
            "namespace": "",
            "file": "adminMode.js",
            "line": 1
        },
        "attendnee": {
            "name": "attendnee",
            "shortname": "attendnee",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "attendee",
            "namespace": "",
            "file": "attendee.js",
            "line": 1
        },
        "dataIO": {
            "name": "dataIO",
            "shortname": "dataIO",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "dataIO",
            "namespace": "",
            "file": "dataIO.js",
            "line": 1
        },
        "global": {
            "name": "global",
            "shortname": "global",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "global",
            "namespace": "",
            "file": "global.js",
            "line": 1
        },
        "linkedlist": {
            "name": "linkedlist",
            "shortname": "linkedlist",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "linkedlist",
            "namespace": "",
            "file": "linkedlist.js",
            "line": 1
        },
        "meeting": {
            "name": "meeting",
            "shortname": "meeting",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "meeting",
            "namespace": "",
            "file": "meeting.js",
            "line": 1
        },
        "user": {
            "name": "user",
            "shortname": "user",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "user",
            "namespace": "",
            "file": "user.js",
            "line": 1
        },
        "user_availability": {
            "name": "user_availability",
            "shortname": "user_availability",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "user_availability",
            "namespace": "",
            "file": "user_availability.js",
            "line": 1
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "add_event.js",
            "line": 17,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 20,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 26,
            "description": "Sets the name for the user",
            "itemtype": "method",
            "name": "setName",
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 43,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 47,
            "itemtype": "method",
            "name": "timeSwitcher",
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 53,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 79,
            "description": "addAMPM select box",
            "itemtype": "method",
            "name": "addAMPM",
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 89,
            "description": "Remove AMPM select box",
            "itemtype": "method",
            "name": "removeAMPM",
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 100,
            "description": "populates the select box with the correct number of hours",
            "itemtype": "method",
            "name": "populateHour",
            "params": [
                {
                    "name": "mode",
                    "description": "- sets the mode for the select box\n     23 for 24-Hour mode and 12 for 12-Hour mode.",
                    "type": "Number"
                },
                {
                    "name": "i",
                    "description": "- sets the number for the select box to\n     start counting at. Should be 1 for 12-Hour mode and\n     5 for 24-Hour mode.",
                    "type": "Number"
                },
                {
                    "name": "id",
                    "description": "- This is the element id of the select\n     box you would like to populate.",
                    "type": "String"
                },
                {
                    "name": "ampmID",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 117,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 126,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 150,
            "description": "unpopulates this given select box",
            "itemtype": "method",
            "name": "unpopulateHour",
            "params": [
                {
                    "name": "id",
                    "description": "- This is the element id of the select\n     box you would like to populate.",
                    "type": "String"
                }
            ],
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 167,
            "description": "If so, the page is redirected. Otherwise, it is refreshed.",
            "itemtype": "method",
            "name": "submitVals",
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 176,
            "description": "0123456789",
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 198,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 200,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 202,
            "description": "FOR STORING THE TIME IN 24 HOUR MODE",
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 206,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 233,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 236,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 247,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 250,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 252,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 270,
            "description": "Checks to see if the date can be used or not",
            "itemtype": "method",
            "name": "isInvalidDate",
            "params": [
                {
                    "name": "month",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "day",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "year",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "inputDate",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "currentDate",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "length",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "strthour",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "endhour",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 284,
            "description": "console.log(endhour);",
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 288,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 293,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 299,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 305,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 311,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 316,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 318,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 321,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 324,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 330,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 336,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 344,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 351,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 357,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 361,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 364,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 372,
            "description": "Redirects the page according to if date is invalid\n    If the date is bad, it will refresh the page,\n    otherwise it will redirect to events.html",
            "itemtype": "method",
            "name": "redirect",
            "params": [
                {
                    "name": "badDate",
                    "description": "",
                    "type": "Bool"
                }
            ],
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 383,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "add_event.js",
            "line": 388,
            "class": "addEvent",
            "module": "add_event"
        },
        {
            "file": "adminMode.js",
            "line": 7,
            "description": "Populates the events to see which events can be selected",
            "itemtype": "method",
            "name": "populateEventSelect",
            "class": "adminMode",
            "module": "adminMode"
        },
        {
            "file": "adminMode.js",
            "line": 22,
            "description": "Get the node at index i from masterEvent",
            "class": "adminMode",
            "module": "adminMode"
        },
        {
            "file": "adminMode.js",
            "line": 41,
            "description": "Removes the events when page is reloaded",
            "itemtype": "method",
            "name": "unpopulateEvents",
            "class": "adminMode",
            "module": "adminMode"
        },
        {
            "file": "adminMode.js",
            "line": 55,
            "itemtype": "method",
            "name": "addRow",
            "params": [
                {
                    "name": "name\nAdds",
                    "description": "the attendee to the Attendee Table",
                    "type": "String"
                }
            ],
            "class": "adminMode",
            "module": "adminMode"
        },
        {
            "file": "adminMode.js",
            "line": 73,
            "description": "Populates the Attendee Table to see who is attending",
            "itemtype": "method",
            "name": "populateAttendeeTable",
            "class": "adminMode",
            "module": "adminMode"
        },
        {
            "file": "adminMode.js",
            "line": 98,
            "description": "Removes the Attendee Table when page is reloaded",
            "itemtype": "method",
            "name": "unpopulateTable",
            "class": "adminMode",
            "module": "adminMode"
        },
        {
            "file": "dataIO.js",
            "line": 13,
            "itemtype": "method",
            "name": "writeData",
            "params": [
                {
                    "name": "array",
                    "description": ""
                },
                {
                    "name": "num",
                    "description": ""
                },
                {
                    "name": "name",
                    "description": "array: values to store are saved in with an offset\n   offset: # of values saved per item\n   name: name of value"
                }
            ],
            "example": [
                "\n  Say I want to store the attendees of an event in\n   an event.  If the event name is Birthday, the attendee's look like this:\n   last name, first name\n   Smith, John\n   Foo, Bill\n   Jimmy, Gill\n\n The array should look like this:\n arr =[Smith, John, Foo, Bill, Jimmy, Gill]\n\n num will be equal to 2 here for the number of items per attendee\n\n  This function will save it as so\n  Smith@John Foo@Bill Jimmy@Gill"
            ],
            "return": {
                "description": "null"
            },
            "class": "dataIO",
            "module": "dataIO"
        },
        {
            "file": "dataIO.js",
            "line": 76,
            "itemtype": "method",
            "name": "readData",
            "params": [
                {
                    "name": "string",
                    "description": ""
                }
            ],
            "example": [
                "\n //TAKES IN A NAME OF A DATA STRUCTURE TO READ IN\n //TAKES FROM localStorage\n //IF FILE NON EXISTENT, PRINT TO CONOSLE AND RETURN\n //RETURNS AN ARRAY STUCTURED AS SO\n //array(data1, data1a, data1b, data2a, data2b)\n //BASED ON READ FILE FORMAT AS\n data1@data1a@data1b... data2@data2a...\n //SEE HOW THE writeData FUNCTION ABOVE WRITES FOR A MORE\n // DETAILED DESCRIPTION"
            ],
            "return": {
                "description": "array"
            },
            "class": "dataIO",
            "module": "dataIO"
        },
        {
            "file": "dataIO.js",
            "line": 139,
            "itemtype": "method",
            "name": "readEventData",
            "params": [
                {
                    "name": "string",
                    "description": "Takes in a name of a file that stores event data\n Different than readData because it parses information different"
                }
            ],
            "example": [
                "\n trying to read masterEvent\n call readEventData (masterEvent)"
            ],
            "return": {
                "description": "array formated as such\n [title, date, length,...]"
            },
            "class": "dataIO",
            "module": "dataIO"
        },
        {
            "file": "dataIO.js",
            "line": 194,
            "itemtype": "method",
            "name": "eventArray",
            "params": [
                {
                    "name": "list",
                    "description": ""
                }
            ],
            "example": [
                "\ntakes in a list of events and changes it to an array\nSince the list is passed by value, removing the first value wont destroy\nthe master list"
            ],
            "return": {
                "description": "(array)"
            },
            "class": "dataIO",
            "module": "dataIO"
        },
        {
            "file": "dataIO.js",
            "line": 222,
            "itemtype": "method",
            "name": "userArray\ntakes in a list of users and changes it to array",
            "params": [
                {
                    "name": "list",
                    "description": ""
                }
            ],
            "example": [
                " userArray(masterUser)"
            ],
            "return": {
                "description": "array"
            },
            "class": "dataIO",
            "module": "dataIO"
        },
        {
            "file": "dataIO.js",
            "line": 244,
            "itemtype": "method",
            "name": "populateEvent",
            "params": [
                {
                    "name": "none",
                    "description": ""
                }
            ],
            "return": {
                "description": "null"
            },
            "class": "dataIO",
            "module": "dataIO"
        },
        {
            "file": "dataIO.js",
            "line": 274,
            "itemtype": "method",
            "name": "populateUser",
            "params": [
                {
                    "name": "string",
                    "description": ""
                }
            ],
            "return": {
                "description": "list"
            },
            "class": "dataIO",
            "module": "dataIO"
        },
        {
            "file": "global.js",
            "line": 20,
            "global": "lists for keeping track of\n        all users and all events",
            "class": "global",
            "module": "global"
        },
        {
            "file": "meeting.js",
            "line": 36,
            "description": "Takes in a first name and a last name\ncreates a new attendee, and adds it to the list.",
            "itemtype": "method",
            "name": "add()",
            "params": [
                {
                    "name": "lastName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "firstName",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "meeting",
            "module": "meeting"
        },
        {
            "file": "meeting.js",
            "line": 52,
            "description": "Allows for comparison of events by date.",
            "itemtype": "method",
            "name": "valueOf()",
            "class": "meeting",
            "module": "meeting"
        },
        {
            "file": "user.js",
            "line": 6,
            "description": "JavaScirpt file that accompanies user.html\nHas the user select from a drop down menu of people\n If their name is not listed, user has the option to add their name\n Clicks continue to move on to add availability",
            "class": "user",
            "module": "user"
        },
        {
            "file": "user.js",
            "line": 15,
            "itemtype": "method",
            "name": "submitName\nTakes in user input for the username and submits it",
            "class": "user",
            "module": "user"
        },
        {
            "file": "user.js",
            "line": 43,
            "itemtype": "method",
            "name": "populateUserSelect",
            "params": [
                {
                    "name": "id\nPopulates",
                    "description": "the usernames so that the user can select one",
                    "type": "String"
                }
            ],
            "class": "user",
            "module": "user"
        },
        {
            "file": "user.js",
            "line": 57,
            "description": "Get the node at index i from masterUser",
            "class": "user",
            "module": "user"
        },
        {
            "file": "user.js",
            "line": 76,
            "itemtype": "method",
            "name": "unpopulateNames\nRemoves the usernames when page is reloaded",
            "class": "user",
            "module": "user"
        },
        {
            "file": "user.js",
            "line": 90,
            "itemtype": "method",
            "name": "addAvailability\nTakes the selected username and carries it over from user.html to user_availability.html",
            "class": "user",
            "module": "user"
        },
        {
            "file": "user_availability.js",
            "line": 6,
            "description": "Adds a row to the table on user_availabilty.html. This will\nbe used to add the given events to the table.",
            "class": "user_availability",
            "module": "user_availability"
        },
        {
            "file": "user_availability.js",
            "line": 13,
            "itemtype": "method",
            "name": "setName\nSets the username for the user",
            "class": "user_availability",
            "module": "user_availability"
        },
        {
            "file": "user_availability.js",
            "line": 33,
            "itemtype": "method",
            "name": "addRow",
            "params": [
                {
                    "name": "title",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "date",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "time",
                    "description": "\nAdds the event to the Event Table",
                    "type": "String"
                }
            ],
            "class": "user_availability",
            "module": "user_availability"
        },
        {
            "file": "user_availability.js",
            "line": 62,
            "itemtype": "method",
            "name": "loadEvents\nLoads the events from the list and shows which ones are available to the user",
            "class": "user_availability",
            "module": "user_availability"
        },
        {
            "file": "user_availability.js",
            "line": 95,
            "description": "Check to see what events the user is going to",
            "class": "user_availability",
            "module": "user_availability"
        },
        {
            "file": "user_availability.js",
            "line": 119,
            "itemtype": "method",
            "name": "submit\nAdds user to the event they have chosen for their availability",
            "class": "user_availability",
            "module": "user_availability"
        },
        {
            "file": "user_availability.js",
            "line": 134,
            "description": "Here we keep track of which events had a check by there name\nNext thing to do is write to file (filename being that event)\nthat the person who is logged in is attending",
            "class": "user_availability",
            "module": "user_availability"
        },
        {
            "file": "user_availability.js",
            "line": 145,
            "description": "Populate the list of that event",
            "class": "user_availability",
            "module": "user_availability"
        },
        {
            "file": "user_availability.js",
            "line": 156,
            "description": "create a new attendee with the user logged in",
            "class": "user_availability",
            "module": "user_availability"
        },
        {
            "file": "user_availability.js",
            "line": 160,
            "description": "add the person to the list",
            "class": "user_availability",
            "module": "user_availability"
        },
        {
            "file": "user_availability.js",
            "line": 164,
            "description": "write the list to file",
            "class": "user_availability",
            "module": "user_availability"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " dataIO.js:76"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " dataIO.js:139"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " dataIO.js:274"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:17"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:20"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:43"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:53"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:117"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:126"
        },
        {
            "message": "Missing item type\n0123456789",
            "line": " add_event.js:176"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:198"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:200"
        },
        {
            "message": "Missing item type\nFOR STORING THE TIME IN 24 HOUR MODE",
            "line": " add_event.js:202"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:206"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:233"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:236"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:247"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:250"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:252"
        },
        {
            "message": "Missing item type\nconsole.log(endhour);",
            "line": " add_event.js:284"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:288"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:293"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:299"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:305"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:311"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:316"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:318"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:321"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:324"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:330"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:336"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:344"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:351"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:357"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:361"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:364"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:383"
        },
        {
            "message": "Missing item type",
            "line": " add_event.js:388"
        },
        {
            "message": "Missing item type\nGet the node at index i from masterEvent",
            "line": " adminMode.js:22"
        },
        {
            "message": "Missing item type",
            "line": " global.js:20"
        },
        {
            "message": "Missing item type\nJavaScirpt file that accompanies user.html\nHas the user select from a drop down menu of people\n If their name is not listed, user has the option to add their name\n Clicks continue to move on to add availability",
            "line": " user.js:6"
        },
        {
            "message": "Missing item type\nGet the node at index i from masterUser",
            "line": " user.js:57"
        },
        {
            "message": "Missing item type\nAdds a row to the table on user_availabilty.html. This will\nbe used to add the given events to the table.",
            "line": " user_availability.js:6"
        },
        {
            "message": "Missing item type\nCheck to see what events the user is going to",
            "line": " user_availability.js:95"
        },
        {
            "message": "Missing item type\nHere we keep track of which events had a check by there name\nNext thing to do is write to file (filename being that event)\nthat the person who is logged in is attending",
            "line": " user_availability.js:134"
        },
        {
            "message": "Missing item type\nPopulate the list of that event",
            "line": " user_availability.js:145"
        },
        {
            "message": "Missing item type\ncreate a new attendee with the user logged in",
            "line": " user_availability.js:156"
        },
        {
            "message": "Missing item type\nadd the person to the list",
            "line": " user_availability.js:160"
        },
        {
            "message": "Missing item type\nwrite the list to file",
            "line": " user_availability.js:164"
        }
    ]
}